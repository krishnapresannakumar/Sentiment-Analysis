import numpy as np
import pandas as pd
import spacy
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.ensemble import RandomForestClassifier

# Load the dataset and preprocess the text
df = pd.read_csv("emotion_dataset.csv")

# Remove punctuation and lowercase the text
df["text"] = df["text"].str.replace(r'[^\w\s]', "").str.lower()

# Load the spacy library for text preprocessing
nlp = spacy.load("en_core_web_md")

# Tokenize and lemmatize the text
df["text"] = df["text"].apply(lambda x: [token.lemma_ for token in nlp(x)])

# Join the lemmas back into a single string
df["text"] = df["text"].apply(lambda x: " ".join(x))

# Extract features from the text using CountVectorizer
vectorizer = CountVectorizer()
X = vectorizer.fit_transform(df["text"])

# Extract the labels from the dataset
y = df["emotion"]

# Split the dataset into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)

# Train a Random Forest classifier on the training data
clf = RandomForestClassifier()
clf.fit(X_train, y_train)

# Evaluate the classifier on the test set
accuracy = clf.score(X_test, y_test)
print("Accuracy: {:.2f}".format(accuracy))
